{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x347451E2BC19CB63E6A370d5Ab8d09591B8704Ea",
    "txHash": "0xe06a2e23afa84ca82f7be3699bdb3331a743364b9ea1da3f226b351972339baa"
  },
  "proxies": [
    {
      "address": "0xaB1dCa1C0f948c268652eedC676966002Ae241c6",
      "txHash": "0x6c5e1cae6da4afdf356bfd254b84aa63b16db13b682a90a1295f69cca201027a",
      "kind": "transparent"
    },
    {
      "address": "0xE3dD17ff009bAC84e32130fcA5f01C908e956603",
      "txHash": "0x61b8fbf49cf2e2cf5136d2f8d1d4d8eb08191f4eef9c8058f694b9ad02c8b100",
      "kind": "transparent"
    },
    {
      "address": "0x85CD2803223C864D625b1D289fDD3Cee7e4bB307",
      "txHash": "0xa5ea78d65548ec3571b9d2b096fb10011d8a551c7077fd6201187db4e8409143",
      "kind": "transparent"
    },
    {
      "address": "0xD66DAbE0c898Ec74DA03AE4e90b9c051408685e6",
      "txHash": "0x714329aa92f48ad12a93b4dc2088ba3f0584b66fd29ce177552131fe10c42041",
      "kind": "transparent"
    },
    {
      "address": "0x426DBAa2B33cE1B833C13b72503F5128AFef79fC",
      "txHash": "0x009d13d4ca66cc47554c4dc88ae6c4451dbb5c319df042f2a60066f3f70754e2",
      "kind": "transparent"
    },
    {
      "address": "0x60aBb55c8488698153dB0AF2af362EdB25A505e3",
      "txHash": "0xeff2ddb1dd9b46fe2dcb616d702f3a31d8cbe54ec62b3e06f6e56c60f7c753c8",
      "kind": "transparent"
    },
    {
      "address": "0x037528457Cf5b0b9DAb641Fd7F0Ce8Fc9690318d",
      "txHash": "0x50b5c206fc9f6aebdebe273a8da6224a45e75ad63c6cca29fe0c633295fd44fd",
      "kind": "transparent"
    },
    {
      "address": "0xb9e08d13d2694B561a5033ACa07Ba7dEa49D0258",
      "txHash": "0x0efb729672d72e07dc02d546a1fb0e272f7b34b7197fae493fa5b0701edbfdf3",
      "kind": "transparent"
    },
    {
      "address": "0x8c3904bC848F6beff87c37F0414430a54B335Daa",
      "txHash": "0xb335849856cdc383fc6b5f961b016a45d40edc873a3ddbc76e4817d4bf8a9c79",
      "kind": "transparent"
    }
  ],
  "impls": {
    "ad4461f54dca48f96a5303cdb144b843237514360b474e3cbce0fa48a97e6ac1": {
      "address": "0x31Ee9cEe0F32DCD9Ab61558E6dFF2fE8dE5d8c5e",
      "txHash": "0x1b4cb17cfb45f3e0956645032577f3e87273aa3aa1aef08cfcae85390243947a",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "stakeToken",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IERC20)4239",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:20"
          },
          {
            "label": "rewardController",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:22"
          },
          {
            "label": "currentEpoch",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:23"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_struct(StakeData)8324_storage)",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:25"
          },
          {
            "label": "epochs",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_struct(EpochData)8312_storage)",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)50_storage",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:208"
          },
          {
            "label": "chiLocking",
            "offset": 0,
            "slot": "206",
            "type": "t_contract(IChiLocking)7398",
            "contract": "ChiStaking",
            "src": "contracts/staking/ChiStaking.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IChiLocking)7398": {
            "label": "contract IChiLocking",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)4239": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_enum(RewardToken)8304": {
            "label": "enum IStakingWithEpochs.RewardToken",
            "members": [
              "USC",
              "CHI",
              "STETH"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(StakeData)8324_storage)": {
            "label": "mapping(address => struct IStakingWithEpochs.StakeData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(RewardToken)8304,t_uint256)": {
            "label": "mapping(enum IStakingWithEpochs.RewardToken => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EpochData)8312_storage)": {
            "label": "mapping(uint256 => struct IStakingWithEpochs.EpochData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EpochData)8312_storage": {
            "label": "struct IStakingWithEpochs.EpochData",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cumulativeRewardsPerShare",
                "type": "t_mapping(t_enum(RewardToken)8304,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeData)8324_storage": {
            "label": "struct IStakingWithEpochs.StakeData",
            "members": [
              {
                "label": "lastUpdatedEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "shares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "addSharesNextEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "unclaimedRewards",
                "type": "t_mapping(t_enum(RewardToken)8304,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "60f60c70b29ee60302a513a186c43e8c7c8a2229c6676bc6d3521c61b8e75808": {
      "address": "0xCdcF3C9A1b7b988c833aA19902B2E53aA3a866a3",
      "txHash": "0x955521235695e9a3a4cf034da36ddd8289906f2d7065f30511585b41e96ffee7",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "chi",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)4239",
            "contract": "ChiLocking",
            "src": "contracts/staking/ChiLocking.sol:20"
          },
          {
            "label": "rewardController",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "ChiLocking",
            "src": "contracts/staking/ChiLocking.sol:21"
          },
          {
            "label": "currentEpoch",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ChiLocking",
            "src": "contracts/staking/ChiLocking.sol:22"
          },
          {
            "label": "totalLockedChi",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "ChiLocking",
            "src": "contracts/staking/ChiLocking.sol:23"
          },
          {
            "label": "totalUnlockedChi",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "ChiLocking",
            "src": "contracts/staking/ChiLocking.sol:24"
          },
          {
            "label": "totalLockedShares",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "ChiLocking",
            "src": "contracts/staking/ChiLocking.sol:25"
          },
          {
            "label": "totalVotingPower",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "ChiLocking",
            "src": "contracts/staking/ChiLocking.sol:26"
          },
          {
            "label": "sumOfLockedDurations",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "ChiLocking",
            "src": "contracts/staking/ChiLocking.sol:27"
          },
          {
            "label": "numberOfLockedPositions",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "ChiLocking",
            "src": "contracts/staking/ChiLocking.sol:28"
          },
          {
            "label": "addVotingPowerInEpoch",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "ChiLocking",
            "src": "contracts/staking/ChiLocking.sol:29"
          },
          {
            "label": "sumShareDurationProduct",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "ChiLocking",
            "src": "contracts/staking/ChiLocking.sol:30"
          },
          {
            "label": "addedAmountInEpoch",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "ChiLocking",
            "src": "contracts/staking/ChiLocking.sol:31"
          },
          {
            "label": "chiLockers",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ChiLocking",
            "src": "contracts/staking/ChiLocking.sol:33"
          },
          {
            "label": "locks",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_struct(LockingData)7183_storage)",
            "contract": "ChiLocking",
            "src": "contracts/staking/ChiLocking.sol:34"
          },
          {
            "label": "epochs",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_uint256,t_struct(EpochData)7208_storage)",
            "contract": "ChiLocking",
            "src": "contracts/staking/ChiLocking.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(LockedPosition)7174_storage)dyn_storage": {
            "label": "struct IChiLocking.LockedPosition[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)4239": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(LockingData)7183_storage)": {
            "label": "mapping(address => struct IChiLocking.LockingData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EpochData)7208_storage)": {
            "label": "mapping(uint256 => struct IChiLocking.EpochData)",
            "numberOfBytes": "32"
          },
          "t_struct(EpochData)7208_storage": {
            "label": "struct IChiLocking.EpochData",
            "members": [
              {
                "label": "lockedSharesInEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalLockedChiInEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "sharesToUnlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "cumulativeStETHPerLockedShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cumulativeStETHPerUnlocked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "numberOfEndingPositions",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(LockedPosition)7174_storage": {
            "label": "struct IChiLocking.LockedPosition",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "shares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "withdrawnChiAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(LockingData)7183_storage": {
            "label": "struct IChiLocking.LockingData",
            "members": [
              {
                "label": "lastUpdatedEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unclaimedStETH",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "positions",
                "type": "t_array(t_struct(LockedPosition)7174_storage)dyn_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "48abe9e8fa5103f712ad9ecd9e8df917b0e0890c51d9cbb10746ca2c5f2dfeb3": {
      "address": "0x998d150449AAD4518732F6551Dee0bBEaaCd1134",
      "txHash": "0xea367f7fc1ac97c5f7118cfb9925c983ba43a864826357d60fa56d792da7c80c",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "stakeToken",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IERC20)4239",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:20"
          },
          {
            "label": "rewardController",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:22"
          },
          {
            "label": "currentEpoch",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:23"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_struct(StakeData)8324_storage)",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:25"
          },
          {
            "label": "epochs",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_struct(EpochData)8312_storage)",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)50_storage",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:208"
          },
          {
            "label": "chi",
            "offset": 0,
            "slot": "206",
            "type": "t_contract(IERC20)4239",
            "contract": "LPStaking",
            "src": "contracts/staking/LPStaking.sol:20"
          },
          {
            "label": "chiLockingContract",
            "offset": 0,
            "slot": "207",
            "type": "t_contract(IChiLocking)7398",
            "contract": "LPStaking",
            "src": "contracts/staking/LPStaking.sol:21"
          },
          {
            "label": "chiAmountFromEmissions",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "LPStaking",
            "src": "contracts/staking/LPStaking.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IChiLocking)7398": {
            "label": "contract IChiLocking",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)4239": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_enum(RewardToken)8304": {
            "label": "enum IStakingWithEpochs.RewardToken",
            "members": [
              "USC",
              "CHI",
              "STETH"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(StakeData)8324_storage)": {
            "label": "mapping(address => struct IStakingWithEpochs.StakeData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(RewardToken)8304,t_uint256)": {
            "label": "mapping(enum IStakingWithEpochs.RewardToken => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EpochData)8312_storage)": {
            "label": "mapping(uint256 => struct IStakingWithEpochs.EpochData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EpochData)8312_storage": {
            "label": "struct IStakingWithEpochs.EpochData",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cumulativeRewardsPerShare",
                "type": "t_mapping(t_enum(RewardToken)8304,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeData)8324_storage": {
            "label": "struct IStakingWithEpochs.StakeData",
            "members": [
              {
                "label": "lastUpdatedEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "shares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "addSharesNextEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "unclaimedRewards",
                "type": "t_mapping(t_enum(RewardToken)8304,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7fee660cc8f48c12d075e154fef7d57d349f9a4424231678046bd45d7651109c": {
      "address": "0x85493602b33C89da74e5fc0d9c39372273F72239",
      "txHash": "0xd7797d33abdc9f120589ebe52f3e1bcd9b313cfa986452758ff17949e871609a",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "chi",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)4239",
            "contract": "ChiVesting",
            "src": "contracts/staking/ChiVesting.sol:18"
          },
          {
            "label": "cliffDuration",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "ChiVesting",
            "src": "contracts/staking/ChiVesting.sol:20"
          },
          {
            "label": "vestingDuration",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ChiVesting",
            "src": "contracts/staking/ChiVesting.sol:21"
          },
          {
            "label": "totalLockedChi",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "ChiVesting",
            "src": "contracts/staking/ChiVesting.sol:22"
          },
          {
            "label": "totalUnlockedChi",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "ChiVesting",
            "src": "contracts/staking/ChiVesting.sol:23"
          },
          {
            "label": "totalShares",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "ChiVesting",
            "src": "contracts/staking/ChiVesting.sol:24"
          },
          {
            "label": "currentEpoch",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "ChiVesting",
            "src": "contracts/staking/ChiVesting.sol:25"
          },
          {
            "label": "totalVotingPower",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "ChiVesting",
            "src": "contracts/staking/ChiVesting.sol:26"
          },
          {
            "label": "rewardController",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "ChiVesting",
            "src": "contracts/staking/ChiVesting.sol:27"
          },
          {
            "label": "chiVesters",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ChiVesting",
            "src": "contracts/staking/ChiVesting.sol:29"
          },
          {
            "label": "vestingData",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_struct(VestingData)7473_storage)",
            "contract": "ChiVesting",
            "src": "contracts/staking/ChiVesting.sol:30"
          },
          {
            "label": "epochs",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint256,t_struct(EpochData)7478_storage)",
            "contract": "ChiVesting",
            "src": "contracts/staking/ChiVesting.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)4239": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(VestingData)7473_storage)": {
            "label": "mapping(address => struct IChiVesting.VestingData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EpochData)7478_storage)": {
            "label": "mapping(uint256 => struct IChiVesting.EpochData)",
            "numberOfBytes": "32"
          },
          "t_struct(EpochData)7478_storage": {
            "label": "struct IChiVesting.EpochData",
            "members": [
              {
                "label": "cumulativeStETHRewardPerShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cumulativeUnlockedPerShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VestingData)7473_storage": {
            "label": "struct IChiVesting.VestingData",
            "members": [
              {
                "label": "startAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "shares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "unlockedChi",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastWithdrawnEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "unclaimedStETH",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastClaimedEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "80a99cf5131a795930e3aee3dd65af0d6ab4bcafd94ea44e8b302097cfc31164": {
      "address": "0x18cA6CBFA7957d6D52B632458Aa41a15d59d0A1b",
      "txHash": "0x017843325734df2a570768b496ce531a9b20d5557aae8b4d60885baee24d2601",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "stakeToken",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IERC20)4239",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:20"
          },
          {
            "label": "rewardController",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:22"
          },
          {
            "label": "currentEpoch",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:23"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_struct(StakeData)9164_storage)",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:25"
          },
          {
            "label": "epochs",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_struct(EpochData)9152_storage)",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)50_storage",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:208"
          },
          {
            "label": "chi",
            "offset": 0,
            "slot": "206",
            "type": "t_contract(IERC20)4239",
            "contract": "USCStaking",
            "src": "contracts/staking/USCStaking.sol:21"
          },
          {
            "label": "chiLockingContract",
            "offset": 0,
            "slot": "207",
            "type": "t_contract(IChiLocking)8208",
            "contract": "USCStaking",
            "src": "contracts/staking/USCStaking.sol:22"
          },
          {
            "label": "chiAmountFromEmissions",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "USCStaking",
            "src": "contracts/staking/USCStaking.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IChiLocking)8208": {
            "label": "contract IChiLocking",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)4239": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_enum(RewardToken)9144": {
            "label": "enum IStakingWithEpochs.RewardToken",
            "members": [
              "USC",
              "CHI",
              "STETH"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(StakeData)9164_storage)": {
            "label": "mapping(address => struct IStakingWithEpochs.StakeData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(RewardToken)9144,t_uint256)": {
            "label": "mapping(enum IStakingWithEpochs.RewardToken => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EpochData)9152_storage)": {
            "label": "mapping(uint256 => struct IStakingWithEpochs.EpochData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EpochData)9152_storage": {
            "label": "struct IStakingWithEpochs.EpochData",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cumulativeRewardsPerShare",
                "type": "t_mapping(t_enum(RewardToken)9144,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeData)9164_storage": {
            "label": "struct IStakingWithEpochs.StakeData",
            "members": [
              {
                "label": "lastUpdatedEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "shares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "addSharesNextEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "unclaimedRewards",
                "type": "t_mapping(t_enum(RewardToken)9144,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7148d94656f12619a6eddcbbebdf211adb2982c34948f62edd8cd0f5128786a8": {
      "address": "0xA579C86bD3e482956B9Ac5A99EA279D03dd31BFD",
      "txHash": "0x1c7044be5b4377b98f148cbf55e980733a4c00109839b84c7e1d8044be07f9b4",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "priceFeedAggregator",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IPriceFeedAggregator)16097",
            "contract": "ReserveHolder",
            "src": "contracts/ReserveHolder.sol:29"
          },
          {
            "label": "claimer",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "ReserveHolder",
            "src": "contracts/ReserveHolder.sol:30"
          },
          {
            "label": "totalClaimed",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ReserveHolder",
            "src": "contracts/ReserveHolder.sol:31"
          },
          {
            "label": "swapEthTolerance",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "ReserveHolder",
            "src": "contracts/ReserveHolder.sol:32"
          },
          {
            "label": "ethThreshold",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "ReserveHolder",
            "src": "contracts/ReserveHolder.sol:33"
          },
          {
            "label": "totalStEthDeposited",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "ReserveHolder",
            "src": "contracts/ReserveHolder.sol:34"
          },
          {
            "label": "curveStEthSafeGuardPercentage",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "ReserveHolder",
            "src": "contracts/ReserveHolder.sol:35"
          },
          {
            "label": "isArbitrager",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ReserveHolder",
            "src": "contracts/ReserveHolder.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPriceFeedAggregator)16097": {
            "label": "contract IPriceFeedAggregator",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "23a0caae574604017c540be590725518aa55830bdc838a3f90b9b18b1564f2d9": {
      "address": "0x03f6265357D06E12D84771569F891Cc244f6A5Fd",
      "txHash": "0x5334c330a43215b6426bf85437fb0351dae946651d60341c64b0f4801e62d72b",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "chi",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)4463",
            "contract": "RewardController",
            "src": "contracts/staking/RewardController.sol:29"
          },
          {
            "label": "usc",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IERC20)4463",
            "contract": "RewardController",
            "src": "contracts/staking/RewardController.sol:30"
          },
          {
            "label": "reserveHolder",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IReserveHolder)13858",
            "contract": "RewardController",
            "src": "contracts/staking/RewardController.sol:31"
          },
          {
            "label": "arbitrager",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IArbitrage)12791",
            "contract": "RewardController",
            "src": "contracts/staking/RewardController.sol:32"
          },
          {
            "label": "uscStaking",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(IUSCStaking)14181",
            "contract": "RewardController",
            "src": "contracts/staking/RewardController.sol:33"
          },
          {
            "label": "chiStaking",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IChiStaking)13153",
            "contract": "RewardController",
            "src": "contracts/staking/RewardController.sol:34"
          },
          {
            "label": "chiLocking",
            "offset": 0,
            "slot": "107",
            "type": "t_contract(IChiLocking)13093",
            "contract": "RewardController",
            "src": "contracts/staking/RewardController.sol:35"
          },
          {
            "label": "chiVesting",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(IChiVesting)13308",
            "contract": "RewardController",
            "src": "contracts/staking/RewardController.sol:36"
          },
          {
            "label": "uscEthLPStaking",
            "offset": 0,
            "slot": "109",
            "type": "t_contract(ILPStaking)13489",
            "contract": "RewardController",
            "src": "contracts/staking/RewardController.sol:37"
          },
          {
            "label": "chiEthLPStaking",
            "offset": 0,
            "slot": "110",
            "type": "t_contract(ILPStaking)13489",
            "contract": "RewardController",
            "src": "contracts/staking/RewardController.sol:38"
          },
          {
            "label": "currentEpoch",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "RewardController",
            "src": "contracts/staking/RewardController.sol:40"
          },
          {
            "label": "firstEpochTimestamp",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "RewardController",
            "src": "contracts/staking/RewardController.sol:41"
          },
          {
            "label": "chiIncentivesForChiLocking",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "RewardController",
            "src": "contracts/staking/RewardController.sol:42"
          },
          {
            "label": "chiIncentivesForUscStaking",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "RewardController",
            "src": "contracts/staking/RewardController.sol:43"
          },
          {
            "label": "chiIncentivesForUscEthLPStaking",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "RewardController",
            "src": "contracts/staking/RewardController.sol:44"
          },
          {
            "label": "chiIncentivesForChiEthLPStaking",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "RewardController",
            "src": "contracts/staking/RewardController.sol:45"
          },
          {
            "label": "epochs",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_uint256,t_struct(EpochData)13867_storage)",
            "contract": "RewardController",
            "src": "contracts/staking/RewardController.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IArbitrage)12791": {
            "label": "contract IArbitrage",
            "numberOfBytes": "20"
          },
          "t_contract(IChiLocking)13093": {
            "label": "contract IChiLocking",
            "numberOfBytes": "20"
          },
          "t_contract(IChiStaking)13153": {
            "label": "contract IChiStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IChiVesting)13308": {
            "label": "contract IChiVesting",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)4463": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ILPStaking)13489": {
            "label": "contract ILPStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IReserveHolder)13858": {
            "label": "contract IReserveHolder",
            "numberOfBytes": "20"
          },
          "t_contract(IUSCStaking)14181": {
            "label": "contract IUSCStaking",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_struct(EpochData)13867_storage)": {
            "label": "mapping(uint256 => struct IRewardController.EpochData)",
            "numberOfBytes": "32"
          },
          "t_struct(EpochData)13867_storage": {
            "label": "struct IRewardController.EpochData",
            "members": [
              {
                "label": "totalUscReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "reserveHolderTotalRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cf5dfc030eb771ed5a93e60af3bbac280d8eddccc58e5eeaf410d251e451780c": {
      "address": "0x1Bdd314Be506cE64fFa98640185Eb53963cA5b97",
      "txHash": "0x881dad173943e9305469a670a9248a426c4b3cc805fe404573c06158adec1e53",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "usc",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20)4239",
            "contract": "OCHI",
            "src": "contracts/dso/OCHI.sol:33"
          },
          {
            "label": "chi",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IMintableBurnable)7797",
            "contract": "OCHI",
            "src": "contracts/dso/OCHI.sol:34"
          },
          {
            "label": "uscEthPair",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IUniswapV2Pair)6089",
            "contract": "OCHI",
            "src": "contracts/dso/OCHI.sol:35"
          },
          {
            "label": "chiEthPair",
            "offset": 0,
            "slot": "254",
            "type": "t_contract(IUniswapV2Pair)6089",
            "contract": "OCHI",
            "src": "contracts/dso/OCHI.sol:36"
          },
          {
            "label": "priceFeedAggregator",
            "offset": 0,
            "slot": "255",
            "type": "t_contract(IPriceFeedAggregator)7983",
            "contract": "OCHI",
            "src": "contracts/dso/OCHI.sol:37"
          },
          {
            "label": "currentEpoch",
            "offset": 20,
            "slot": "255",
            "type": "t_uint64",
            "contract": "OCHI",
            "src": "contracts/dso/OCHI.sol:39"
          },
          {
            "label": "firstEpochTimestamp",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "OCHI",
            "src": "contracts/dso/OCHI.sol:40"
          },
          {
            "label": "mintedOCHI",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "OCHI",
            "src": "contracts/dso/OCHI.sol:41"
          },
          {
            "label": "totalOCHIlocked",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "OCHI",
            "src": "contracts/dso/OCHI.sol:42"
          },
          {
            "label": "lpRewards",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_contract(IUniswapV2Pair)6089,t_contract(ILPRewards)7730)",
            "contract": "OCHI",
            "src": "contracts/dso/OCHI.sol:44"
          },
          {
            "label": "options",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_struct(ChiOption)7825_storage)",
            "contract": "OCHI",
            "src": "contracts/dso/OCHI.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)4239": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ILPRewards)7730": {
            "label": "contract ILPRewards",
            "numberOfBytes": "20"
          },
          "t_contract(IMintableBurnable)7797": {
            "label": "contract IMintableBurnable",
            "numberOfBytes": "20"
          },
          "t_contract(IPriceFeedAggregator)7983": {
            "label": "contract IPriceFeedAggregator",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)6089": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(IUniswapV2Pair)6089,t_contract(ILPRewards)7730)": {
            "label": "mapping(contract IUniswapV2Pair => contract ILPRewards)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ChiOption)7825_storage)": {
            "label": "mapping(uint256 => struct IOCHI.ChiOption)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ChiOption)7825_storage": {
            "label": "struct IOCHI.ChiOption",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "strikePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "uscEthPairAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "chiEthPairAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lockedUntil",
                "type": "t_uint64",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "validUntil",
                "type": "t_uint64",
                "offset": 8,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "90c855983c7314fd3ff2a4a118da5578b63e149cd411f0144557c263885c4d7d": {
      "address": "0x71C349B28dd22Ee3fF2fcafc9f05080B633EEB46",
      "txHash": "0x1edb1a16d3c8c7ebe7dc146009ca1c4114e2835f6367a0980d6c7b12153ac515",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "stakeToken",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IERC20)4239",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:20"
          },
          {
            "label": "rewardController",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:22"
          },
          {
            "label": "currentEpoch",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:23"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_struct(StakeData)9164_storage)",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:25"
          },
          {
            "label": "epochs",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_struct(EpochData)9152_storage)",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)50_storage",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:208"
          },
          {
            "label": "chi",
            "offset": 0,
            "slot": "206",
            "type": "t_contract(IERC20)4239",
            "contract": "USCStakingV2",
            "src": "contracts/staking/USCStakingV2.sol:21"
          },
          {
            "label": "chiLockingContract",
            "offset": 0,
            "slot": "207",
            "type": "t_contract(IChiLocking)8208",
            "contract": "USCStakingV2",
            "src": "contracts/staking/USCStakingV2.sol:22"
          },
          {
            "label": "chiAmountFromEmissions",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "USCStakingV2",
            "src": "contracts/staking/USCStakingV2.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IChiLocking)8208": {
            "label": "contract IChiLocking",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)4239": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_enum(RewardToken)9144": {
            "label": "enum IStakingWithEpochs.RewardToken",
            "members": [
              "USC",
              "CHI",
              "STETH"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(StakeData)9164_storage)": {
            "label": "mapping(address => struct IStakingWithEpochs.StakeData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(RewardToken)9144,t_uint256)": {
            "label": "mapping(enum IStakingWithEpochs.RewardToken => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EpochData)9152_storage)": {
            "label": "mapping(uint256 => struct IStakingWithEpochs.EpochData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EpochData)9152_storage": {
            "label": "struct IStakingWithEpochs.EpochData",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cumulativeRewardsPerShare",
                "type": "t_mapping(t_enum(RewardToken)9144,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeData)9164_storage": {
            "label": "struct IStakingWithEpochs.StakeData",
            "members": [
              {
                "label": "lastUpdatedEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "shares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "addSharesNextEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "unclaimedRewards",
                "type": "t_mapping(t_enum(RewardToken)9144,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3ebb3d6d050df3b66e19b09b69e6d77b8ddb0d35c75eeb46c75b2b5b27d7497c": {
      "address": "0x51AB9916f3e4f920C997C4291F7b291487967208",
      "txHash": "0xab6b588f8cf53778bd8abafd97d8d78b3ff15727cf66449b3a74ae9a6312acad",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "stakeToken",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IERC20)1465",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:20"
          },
          {
            "label": "rewardController",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:22"
          },
          {
            "label": "currentEpoch",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:23"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_struct(StakeData)3493_storage)",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:25"
          },
          {
            "label": "epochs",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_struct(EpochData)3481_storage)",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)50_storage",
            "contract": "StakingWithEpochs",
            "src": "contracts/staking/StakingWithEpochs.sol:208"
          },
          {
            "label": "chi",
            "offset": 0,
            "slot": "206",
            "type": "t_contract(IERC20)1465",
            "contract": "USCStakingV2",
            "src": "contracts/staking/USCStakingV2.sol:21"
          },
          {
            "label": "chiLockingContract",
            "offset": 0,
            "slot": "207",
            "type": "t_contract(IChiLocking)3419",
            "contract": "USCStakingV2",
            "src": "contracts/staking/USCStakingV2.sol:22"
          },
          {
            "label": "chiAmountFromEmissions",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "USCStakingV2",
            "src": "contracts/staking/USCStakingV2.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IChiLocking)3419": {
            "label": "contract IChiLocking",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)1465": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_enum(RewardToken)3473": {
            "label": "enum IStakingWithEpochs.RewardToken",
            "members": [
              "USC",
              "CHI",
              "STETH"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(StakeData)3493_storage)": {
            "label": "mapping(address => struct IStakingWithEpochs.StakeData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(RewardToken)3473,t_uint256)": {
            "label": "mapping(enum IStakingWithEpochs.RewardToken => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EpochData)3481_storage)": {
            "label": "mapping(uint256 => struct IStakingWithEpochs.EpochData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EpochData)3481_storage": {
            "label": "struct IStakingWithEpochs.EpochData",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cumulativeRewardsPerShare",
                "type": "t_mapping(t_enum(RewardToken)3473,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeData)3493_storage": {
            "label": "struct IStakingWithEpochs.StakeData",
            "members": [
              {
                "label": "lastUpdatedEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "shares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "addSharesNextEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "unclaimedRewards",
                "type": "t_mapping(t_enum(RewardToken)3473,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c978faac796843086b307e2094d393b6e3cfed5c1115c85184e6b546a1704bea": {
      "address": "0x6347C0d8730780EEeB27321527eB7759D397B064",
      "txHash": "0x91b5fabb969f22186928c108e56c921314ec33d53eedd41c6ca0f97ff0729019",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "chi",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)4463",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:29"
          },
          {
            "label": "usc",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IERC20)4463",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:30"
          },
          {
            "label": "reserveHolder",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IReserveHolder)13858",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:31"
          },
          {
            "label": "arbitrager",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IArbitrage)12791",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:32"
          },
          {
            "label": "uscStaking",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(IUSCStaking)14181",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:33"
          },
          {
            "label": "chiStaking",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IChiStaking)13153",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:34"
          },
          {
            "label": "chiLocking",
            "offset": 0,
            "slot": "107",
            "type": "t_contract(IChiLocking)13093",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:35"
          },
          {
            "label": "chiVesting",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(IChiVesting)13308",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:36"
          },
          {
            "label": "uscEthLPStaking",
            "offset": 0,
            "slot": "109",
            "type": "t_contract(ILPStaking)13489",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:37"
          },
          {
            "label": "chiEthLPStaking",
            "offset": 0,
            "slot": "110",
            "type": "t_contract(ILPStaking)13489",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:38"
          },
          {
            "label": "currentEpoch",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:40"
          },
          {
            "label": "firstEpochTimestamp",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:41"
          },
          {
            "label": "chiIncentivesForChiLocking",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:42"
          },
          {
            "label": "chiIncentivesForUscStaking",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:43"
          },
          {
            "label": "chiIncentivesForUscEthLPStaking",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:44"
          },
          {
            "label": "chiIncentivesForChiEthLPStaking",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:45"
          },
          {
            "label": "epochs",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_uint256,t_struct(EpochData)13867_storage)",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:47"
          },
          {
            "label": "uscStakingProtocolFee",
            "offset": 0,
            "slot": "118",
            "type": "t_uint256",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IArbitrage)12791": {
            "label": "contract IArbitrage",
            "numberOfBytes": "20"
          },
          "t_contract(IChiLocking)13093": {
            "label": "contract IChiLocking",
            "numberOfBytes": "20"
          },
          "t_contract(IChiStaking)13153": {
            "label": "contract IChiStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IChiVesting)13308": {
            "label": "contract IChiVesting",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)4463": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ILPStaking)13489": {
            "label": "contract ILPStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IReserveHolder)13858": {
            "label": "contract IReserveHolder",
            "numberOfBytes": "20"
          },
          "t_contract(IUSCStaking)14181": {
            "label": "contract IUSCStaking",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_struct(EpochData)13867_storage)": {
            "label": "mapping(uint256 => struct IRewardController.EpochData)",
            "numberOfBytes": "32"
          },
          "t_struct(EpochData)13867_storage": {
            "label": "struct IRewardController.EpochData",
            "members": [
              {
                "label": "totalUscReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "reserveHolderTotalRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e7ba8c80e7e6a50ea438d17887dd72dc30ec75b82dc44e8b753c0033f9a163fd": {
      "address": "0x16B5DB5795d46E64D8cEC0b374E62955C5B27899",
      "txHash": "0x97919499071129bcea37a430148acc956e7ac637fb6cbae3fd60c7cc73d47672",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "chi",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20)4352",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:29"
          },
          {
            "label": "usc",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IERC20)4352",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:30"
          },
          {
            "label": "reserveHolder",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IReserveHolder)11202",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:31"
          },
          {
            "label": "arbitrager",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IArbitrage)10190",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:32"
          },
          {
            "label": "uscStaking",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(IUSCStaking)11539",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:33"
          },
          {
            "label": "chiStaking",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IChiStaking)10497",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:34"
          },
          {
            "label": "chiLocking",
            "offset": 0,
            "slot": "107",
            "type": "t_contract(IChiLocking)10437",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:35"
          },
          {
            "label": "chiVesting",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(IChiVesting)10652",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:36"
          },
          {
            "label": "uscEthLPStaking",
            "offset": 0,
            "slot": "109",
            "type": "t_contract(ILPStaking)10833",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:37"
          },
          {
            "label": "chiEthLPStaking",
            "offset": 0,
            "slot": "110",
            "type": "t_contract(ILPStaking)10833",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:38"
          },
          {
            "label": "currentEpoch",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:40"
          },
          {
            "label": "firstEpochTimestamp",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:41"
          },
          {
            "label": "chiIncentivesForChiLocking",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:42"
          },
          {
            "label": "chiIncentivesForUscStaking",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:43"
          },
          {
            "label": "chiIncentivesForUscEthLPStaking",
            "offset": 0,
            "slot": "115",
            "type": "t_uint256",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:44"
          },
          {
            "label": "chiIncentivesForChiEthLPStaking",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:45"
          },
          {
            "label": "epochs",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_uint256,t_struct(EpochData)11211_storage)",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:47"
          },
          {
            "label": "uscStakingProtocolFee",
            "offset": 0,
            "slot": "118",
            "type": "t_uint256",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:51"
          },
          {
            "label": "isArbitrager",
            "offset": 0,
            "slot": "119",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RewardControllerV2",
            "src": "contracts/staking/RewardControllerV2.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IArbitrage)10190": {
            "label": "contract IArbitrage",
            "numberOfBytes": "20"
          },
          "t_contract(IChiLocking)10437": {
            "label": "contract IChiLocking",
            "numberOfBytes": "20"
          },
          "t_contract(IChiStaking)10497": {
            "label": "contract IChiStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IChiVesting)10652": {
            "label": "contract IChiVesting",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)4352": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ILPStaking)10833": {
            "label": "contract ILPStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IReserveHolder)11202": {
            "label": "contract IReserveHolder",
            "numberOfBytes": "20"
          },
          "t_contract(IUSCStaking)11539": {
            "label": "contract IUSCStaking",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EpochData)11211_storage)": {
            "label": "mapping(uint256 => struct IRewardController.EpochData)",
            "numberOfBytes": "32"
          },
          "t_struct(EpochData)11211_storage": {
            "label": "struct IRewardController.EpochData",
            "members": [
              {
                "label": "totalUscReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "reserveHolderTotalRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
